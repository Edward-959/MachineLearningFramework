# -*- coding: utf-8 -*-
"""
Created on Thu Aug 10 16:37:11 2017

@author: 006547
"""
import sys
import os

# sys.path.append(os.path.abspath(os.path.abspath(__file__) + "/../.."))
# from xquant.pyfile import Pyfile
sys.path.append("../")
from ModelSystem.ModelManagement import ModelManagement
from tfModelMultiCNNAttentionBiLSTM.ModelMultiCNNAttentionBiLSTM import ModelMultiCNNAttentionBiLSTM
from System import DumpLoad
from ModelSystem.SignalEvaluate import SignalEvaluate
from ModelSystem.Util.SignalDataSet import generateSignalDataSet
# import System.ReadDataFile as GD
import System.GetInsightData as GD
import math
import datetime as dt
import gc
from multiprocessing import Pool
# import multiprocessing
import pickle


def multiProcessFunction(paraInProcess, paraFixed, absolutePath, backTestUnderlying, modelName):
    # print("start")
    with open(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/signalDataSet.pickle', 'rb') as f:
        signalDataSet = pickle.load(f)
    with open(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/Data.pickle', 'rb') as f:
        tickData, transactionData = pickle.load(f)
    analysisMat = []
    for para in paraInProcess:
        signalTagPara = {"longTriggerRatioPercentile": 0,
                         "shortTriggerRatioPercentile": 100,
                         "longMinTriggerRatio": para[0],
                         "shortMinTriggerRatio": -para[0],
                         "riskRatio": paraFixed['riskRatio'], "maxLose": paraFixed['maxLose'],
                         "closeRatio": -para[0] / 2}

        # 说明如何使用：
        # 定义一个变量字典，放入以下所需的变量，具体变量含义可以参考SignalEvaluate的__init__的注释
        mockTradePara = {"initAmount": para[1], "maxTurnoverPerOrder": paraFixed['maxTurnoverPerOrder'], "maxRatePerOrder": 0.25,
                         "maAmountRate": paraFixed['maAmountRate'], "openWithdrawSeconds": 2.5, "closeWithdrawSeconds": 3,
                         "buyLevel": 1, "sellLevel": 1, "buyDeviation": 0, "sellDeviation": -0.01,
                         "MIN_ORDER_QTY": 100}

        # 实例一个SignalEvaluate，第一个参数为信号变量，第二个为回测变量，第三个用String以类名定义信号分析器
        # 其余不变
        signalEvaluate = SignalEvaluate(signalDataSet, signalTagPara, mockTradePara, "SignalExecutorMaxMinTag", absolutePath,
                                        tickData, transactionData)
        # 执行
        rollingCombineTradingOrder = signalEvaluate.evaluate(funStr=None, show=False)

        analysisMat.append([para[0], para[1], rollingCombineTradingOrder[1][0]['winRate'],
                            rollingCombineTradingOrder[1][0]['averageReturnRate'],
                            rollingCombineTradingOrder[1][0]['averagePositionTime'],
                            rollingCombineTradingOrder[1][0]['timesPerDay'],
                            rollingCombineTradingOrder[1][0]['afterCostProfit'],
                            rollingCombineTradingOrder[1][0]['annualReturnMV']])

        # return rollingCombineTradingOrder, signalTagPara
    # print("end")
    return analysisMat


def paraGroup(paraMat, processNum):
    def multiFor(paraMat2, paraAll2, paraTemp3, index2=0):
        if index2 < paraMat2.__len__() - 1:
            for i in range(paraMat2[index2].__len__()):
                paraTemp2 = paraTemp3[:]
                paraTemp2.append(paraMat2[index2][i])
                multiFor(paraMat2, paraAll2, paraTemp2, index2+1)
        else:
            for i in range(paraMat2[index2].__len__()):
                paraTemp2 = paraTemp3[:]
                paraTemp2.append(paraMat2[index2][i])
                paraAll2.append(paraTemp2)

    paraAll = []
    paraTemp = []
    multiFor(paraMat, paraAll, paraTemp, index2=0)

    taskNumPerProcess = math.ceil(paraAll.__len__()/processNum)

    index = 0

    paraInProcess = []
    while index < paraAll.__len__():
        paraInProcess.append(paraAll[index:index+taskNumPerProcess])
        index += taskNumPerProcess
    processNum = paraInProcess.__len__()
    return paraInProcess, processNum


def main():
    sys.path.append("Factor")
    sys.path.append("NonFactor")
    sys.path.append("Tag")
    sys.path.append("System")

    code = ["AlgoShaolin-000001.SZ-20170413093000-20180413145659",  # 0
            "AlgoShaolin-000002.SZ-20170413093000-20180413145659",  # 1
            "AlgoShaolin-000012.SZ-20170413093000-20180413145659",  # 2
            "AlgoShaolin-000021.SZ-20170413093000-20180413145659",  # 3
            "AlgoShaolin-000028.SZ-20170413093000-20180413145659",  # 4
            "AlgoShaolin-000036.SZ-20170413093000-20180413145659",  # 5
            "AlgoShaolin-000039.SZ-20170413093000-20180413145659",  # 6
            "AlgoShaolin-000050.SZ-20170413093000-20180413145659",  # 7
            "AlgoShaolin-000059.SZ-20170413093000-20180413145659",  # 8
            "AlgoShaolin-000060.SZ-20170413093000-20180413145659",  # 9
            "AlgoShaolin-000063.SZ-20170413093000-20180413145659",  # 10
            "AlgoShaolin-000066.SZ-20170413093000-20180413145659",  # 11
            "AlgoShaolin-000069.SZ-20170413093000-20180413145659",  # 12
            "AlgoShaolin-000100.SZ-20170413093000-20180413145659",  # 13
            "AlgoShaolin-000333.SZ-20170413093000-20180413145659",  # 14
            "AlgoShaolin-000338.SZ-20170413093000-20180413145659",  # 15
            "AlgoShaolin-000400.SZ-20170413093000-20180413145659",  # 16
            "AlgoShaolin-000401.SZ-20170413093000-20180413145659",  # 17
            "AlgoShaolin-000402.SZ-20170413093000-20180413145659",  # 18
            "AlgoShaolin-000413.SZ-20170413093000-20180413145659",  # 19
            "AlgoShaolin-000423.SZ-20170413093000-20180413145659",  # 20
            "AlgoShaolin-000425.SZ-20170413093000-20180413145659",  # 21
            "AlgoShaolin-000426.SZ-20170413093000-20180413145659",  # 22
            "AlgoShaolin-000488.SZ-20170413093000-20180413145659",  # 23
            "AlgoShaolin-000507.SZ-20170413093000-20180413145659",  # 24
            "AlgoShaolin-000513.SZ-20170413093000-20180413145659",  # 25
            "AlgoShaolin-000517.SZ-20170413093000-20180413145659",  # 26
            "AlgoShaolin-000528.SZ-20170413093000-20180413145659",  # 27
            "AlgoShaolin-000530.SZ-20170413093000-20180413145659",  # 28
            "AlgoShaolin-000537.SZ-20170413093000-20180413145659",  # 29
            "AlgoShaolin-000538.SZ-20170413093000-20180413145659",  # 30
            "AlgoShaolin-000568.SZ-20170413093000-20180413145659",  # 31
            "AlgoShaolin-000571.SZ-20170413093000-20180413145659",  # 32
            "AlgoShaolin-000581.SZ-20170413093000-20180413145659",  # 33
            "AlgoShaolin-000587.SZ-20170413093000-20180413145659",  # 34
            "AlgoShaolin-000596.SZ-20170413093000-20180413145659",  # 35
            "AlgoShaolin-000615.SZ-20170413093000-20180413145659",  # 36
            "AlgoShaolin-000623.SZ-20170413093000-20180413145659",  # 37
            "AlgoShaolin-000625.SZ-20170413093000-20180413145659",  # 38
            "AlgoShaolin-000627.SZ-20170413093000-20180413145659",  # 39
            "AlgoShaolin-000630.SZ-20170413093000-20180413145659",  # 40
            "AlgoShaolin-000636.SZ-20170413093000-20180413145659",  # 41
            "AlgoShaolin-000651.SZ-20170413093000-20180413145659",  # 42
            "AlgoShaolin-000661.SZ-20170413093000-20180413145659",  # 43
            "AlgoShaolin-000671.SZ-20170413093000-20180413145659",  # 44
            "AlgoShaolin-000672.SZ-20170413093000-20180413145659",  # 45
            "AlgoShaolin-000681.SZ-20170413093000-20180413145659",  # 46
            "AlgoShaolin-000709.SZ-20170413093000-20180413145659",  # 47
            "AlgoShaolin-000725.SZ-20170413093000-20180413145659",  # 48
            "AlgoShaolin-000728.SZ-20170413093000-20180413145659",  # 49
            "AlgoShaolin-000732.SZ-20170413093000-20180413145659",  # 50
            "AlgoShaolin-000735.SZ-20170413093000-20180413145659",  # 51
            "AlgoShaolin-000738.SZ-20170413093000-20180413145659",  # 52
            "AlgoShaolin-000762.SZ-20170413093000-20180413145659",  # 53
            "AlgoShaolin-000768.SZ-20170413093000-20180413145659",  # 54
            "AlgoShaolin-000776.SZ-20170413093000-20180413145659",  # 55
            "AlgoShaolin-000786.SZ-20170413093000-20180413145659",  # 56
            "AlgoShaolin-000789.SZ-20170413093000-20180413145659",  # 57
            "AlgoShaolin-000792.SZ-20170413093000-20180413145659",  # 58
            "AlgoShaolin-000793.SZ-20170413093000-20180413145659",  # 59
            "AlgoShaolin-000799.SZ-20170413093000-20180413145659",  # 60
            "AlgoShaolin-000800.SZ-20170413093000-20180413145659",  # 61
            "AlgoShaolin-000807.SZ-20170413093000-20180413145659",  # 62
            "AlgoShaolin-000816.SZ-20170413093000-20180413145659",  # 63
            "AlgoShaolin-000822.SZ-20170413093000-20180413145659",  # 64
            "AlgoShaolin-000823.SZ-20170413093000-20180413145659",  # 65
            "AlgoShaolin-000825.SZ-20170413093000-20180413145659",  # 66
            "AlgoShaolin-000826.SZ-20170413093000-20180413145659",  # 67
            "AlgoShaolin-000830.SZ-20170413093000-20180413145659",  # 68
            "AlgoShaolin-000839.SZ-20170413093000-20180413145659",  # 69
            "AlgoShaolin-000858.SZ-20170413093000-20180413145659",  # 70
            "AlgoShaolin-000868.SZ-20170413093000-20180413145659",  # 71
            "AlgoShaolin-000876.SZ-20170413093000-20180413145659",  # 72
            "AlgoShaolin-000877.SZ-20170413093000-20180413145659",  # 73
            "AlgoShaolin-000878.SZ-20170413093000-20180413145659",  # 74
            "AlgoShaolin-000895.SZ-20170413093000-20180413145659",  # 75
            "AlgoShaolin-000898.SZ-20170413093000-20180413145659",  # 76
            "AlgoShaolin-000910.SZ-20170413093000-20180413145659",  # 77
            "AlgoShaolin-000917.SZ-20170413093000-20180413145659",  # 78
            "AlgoShaolin-000935.SZ-20170413093000-20180413145659",  # 79
            "AlgoShaolin-000938.SZ-20170413093000-20180413145659",  # 80
            "AlgoShaolin-000960.SZ-20170413093000-20180413145659",  # 81
            "AlgoShaolin-000961.SZ-20170413093000-20180413145659",  # 82
            "AlgoShaolin-000963.SZ-20170413093000-20180413145659",  # 83
            "AlgoShaolin-000970.SZ-20170413093000-20180413145659",  # 84
            "AlgoShaolin-000977.SZ-20170413093000-20180413145659",  # 85
            "AlgoShaolin-000980.SZ-20170413093000-20180413145659",  # 86
            "AlgoShaolin-000983.SZ-20170413093000-20180413145659",  # 87
            "AlgoShaolin-000988.SZ-20170413093000-20180413145659",  # 88
            "AlgoShaolin-000997.SZ-20170413093000-20180413145659",  # 89
            "AlgoShaolin-000998.SZ-20170413093000-20180413145659",  # 90
            "AlgoShaolin-001979.SZ-20170413093000-20180413145659",  # 91
            "AlgoShaolin-002001.SZ-20170413093000-20180413145659",  # 92
            "AlgoShaolin-002007.SZ-20170413093000-20180413145659",  # 93
            "AlgoShaolin-002008.SZ-20170413093000-20180413145659",  # 94
            "AlgoShaolin-002016.SZ-20170413093000-20180413145659",  # 95
            "AlgoShaolin-002019.SZ-20170413093000-20180413145659",  # 96
            "AlgoShaolin-002024.SZ-20170413093000-20180413145659",  # 97
            "AlgoShaolin-002027.SZ-20170413093000-20180413145659",  # 98
            "AlgoShaolin-002033.SZ-20170413093000-20180413145659",  # 99
            "AlgoShaolin-002038.SZ-20170413093000-20180413145659",  # 100
            "AlgoShaolin-002043.SZ-20170413093000-20180413145659",  # 101
            "AlgoShaolin-002045.SZ-20170413093000-20180413145659",  # 102
            "AlgoShaolin-002049.SZ-20170413093000-20180413145659",  # 103
            "AlgoShaolin-002050.SZ-20170413093000-20180413145659",  # 104
            "AlgoShaolin-002056.SZ-20170413093000-20180413145659",  # 105
            "AlgoShaolin-002063.SZ-20170413093000-20180413145659",  # 106
            "AlgoShaolin-002065.SZ-20170413093000-20180413145659",  # 107
            "AlgoShaolin-002074.SZ-20170413093000-20180413145659",  # 108
            "AlgoShaolin-002078.SZ-20170413093000-20180413145659",  # 109
            "AlgoShaolin-002079.SZ-20170413093000-20180413145659",  # 110
            "AlgoShaolin-002080.SZ-20170413093000-20180413145659",  # 111
            "AlgoShaolin-002081.SZ-20170413093000-20180413145659",  # 112
            "AlgoShaolin-002092.SZ-20170413093000-20180413145659",  # 113
            "AlgoShaolin-002127.SZ-20170413093000-20180413145659",  # 114
            "AlgoShaolin-002128.SZ-20170413093000-20180413145659",  # 115
            "AlgoShaolin-002131.SZ-20170413093000-20180413145659",  # 116
            "AlgoShaolin-002142.SZ-20170413093000-20180413145659",  # 117
            "AlgoShaolin-002146.SZ-20170413093000-20180413145659",  # 118
            "AlgoShaolin-002152.SZ-20170413093000-20180413145659",  # 119
            "AlgoShaolin-002153.SZ-20170413093000-20180413145659",  # 120
            "AlgoShaolin-002156.SZ-20170413093000-20180413145659",  # 121
            "AlgoShaolin-002174.SZ-20170413093000-20180413145659",  # 122
            "AlgoShaolin-002176.SZ-20170413093000-20180413145659",  # 123
            "AlgoShaolin-002179.SZ-20170413093000-20180413145659",  # 124
            "AlgoShaolin-002183.SZ-20170413093000-20180413145659",  # 125
            "AlgoShaolin-002185.SZ-20170413093000-20180413145659",  # 126
            "AlgoShaolin-002194.SZ-20170413093000-20180413145659",  # 127
            "AlgoShaolin-002195.SZ-20170413093000-20180413145659",  # 128
            "AlgoShaolin-002202.SZ-20170413093000-20180413145659",  # 129
            "AlgoShaolin-002217.SZ-20170413093000-20180413145659",  # 130
            "AlgoShaolin-002221.SZ-20170413093000-20180413145659",  # 131
            "AlgoShaolin-002223.SZ-20170413093000-20180413145659",  # 132
            "AlgoShaolin-002230.SZ-20170413093000-20180413145659",  # 133
            "AlgoShaolin-002233.SZ-20170413093000-20180413145659",  # 134
            "AlgoShaolin-002235.SZ-20170413093000-20180413145659",  # 135
            "AlgoShaolin-002236.SZ-20170413093000-20180413145659",  # 136
            "AlgoShaolin-002241.SZ-20170413093000-20180413145659",  # 137
            "AlgoShaolin-002244.SZ-20170413093000-20180413145659",  # 138
            "AlgoShaolin-002245.SZ-20170413093000-20180413145659",  # 139
            "AlgoShaolin-002251.SZ-20170413093000-20180413145659",  # 140
            "AlgoShaolin-002267.SZ-20170413093000-20180413145659",  # 141
            "AlgoShaolin-002268.SZ-20170413093000-20180413145659",  # 142
            "AlgoShaolin-002271.SZ-20170413093000-20180413145659",  # 143
            "AlgoShaolin-002273.SZ-20170413093000-20180413145659",  # 144
            "AlgoShaolin-002280.SZ-20170413093000-20180413145659",  # 145
            "AlgoShaolin-002281.SZ-20170413093000-20180413145659",  # 146
            "AlgoShaolin-002285.SZ-20170413093000-20180413145659",  # 147
            "AlgoShaolin-002294.SZ-20170413093000-20180413145659",  # 148
            "AlgoShaolin-002299.SZ-20170413093000-20180413145659",  # 149
            "AlgoShaolin-002302.SZ-20170413093000-20180413145659",  # 150
            "AlgoShaolin-002304.SZ-20170413093000-20180413145659",  # 151
            "AlgoShaolin-002310.SZ-20170413093000-20180413145659",  # 152
            "AlgoShaolin-002311.SZ-20170413093000-20180413145659",  # 153
            "AlgoShaolin-002320.SZ-20170413093000-20180413145659",  # 154
            "AlgoShaolin-002321.SZ-20170413093000-20180413145659",  # 155
            "AlgoShaolin-002340.SZ-20170413093000-20180413145659",  # 156
            "AlgoShaolin-002354.SZ-20170413093000-20180413145659",  # 157
            "AlgoShaolin-002371.SZ-20170413093000-20180413145659",  # 158
            "AlgoShaolin-002383.SZ-20170413093000-20180413145659",  # 159
            "AlgoShaolin-002384.SZ-20170413093000-20180413145659",  # 160
            "AlgoShaolin-002396.SZ-20170413093000-20180413145659",  # 161
            "AlgoShaolin-002405.SZ-20170413093000-20180413145659",  # 162
            "AlgoShaolin-002407.SZ-20170413093000-20180413145659",  # 163
            "AlgoShaolin-002410.SZ-20170413093000-20180413145659",  # 164
            "AlgoShaolin-002415.SZ-20170413093000-20180413145659",  # 165
            "AlgoShaolin-002419.SZ-20170413093000-20180413145659",  # 166
            "AlgoShaolin-002422.SZ-20170413093000-20180413145659",  # 167
            "AlgoShaolin-002424.SZ-20170413093000-20180413145659",  # 168
            "AlgoShaolin-002428.SZ-20170413093000-20180413145659",  # 169
            "AlgoShaolin-002429.SZ-20170413093000-20180413145659",  # 170
            "AlgoShaolin-002439.SZ-20170413093000-20180413145659",  # 171
            "AlgoShaolin-002440.SZ-20170413093000-20180413145659",  # 172
            "AlgoShaolin-002444.SZ-20170413093000-20180413145659",  # 173
            "AlgoShaolin-002447.SZ-20170413093000-20180413145659",  # 174
            "AlgoShaolin-002449.SZ-20170413093000-20180413145659",  # 175
            "AlgoShaolin-002450.SZ-20170413093000-20180413145659",  # 176
            "AlgoShaolin-002456.SZ-20170413093000-20180413145659",  # 177
            "AlgoShaolin-002457.SZ-20170413093000-20180413145659",  # 178
            "AlgoShaolin-002460.SZ-20170413093000-20180413145659",  # 179
            "AlgoShaolin-002465.SZ-20170413093000-20180413145659",  # 180
            "AlgoShaolin-002466.SZ-20170413093000-20180413145659",  # 181
            "AlgoShaolin-002467.SZ-20170413093000-20180413145659",  # 182
            "AlgoShaolin-002475.SZ-20170413093000-20180413145659",  # 183
            "AlgoShaolin-002477.SZ-20170413093000-20180413145659",  # 184
            "AlgoShaolin-002493.SZ-20170413093000-20180413145659",  # 185
            "AlgoShaolin-002497.SZ-20170413093000-20180413145659",  # 186
            "AlgoShaolin-002500.SZ-20170413093000-20180413145659",  # 187
            "AlgoShaolin-002508.SZ-20170413093000-20180413145659",  # 188
            "AlgoShaolin-002510.SZ-20170413093000-20180413145659",  # 189
            "AlgoShaolin-002517.SZ-20170413093000-20180413145659",  # 190
            "AlgoShaolin-002555.SZ-20170413093000-20180413145659",  # 191
            "AlgoShaolin-002572.SZ-20170413093000-20180413145659",  # 192
            "AlgoShaolin-002573.SZ-20170413093000-20180413145659",  # 193
            "AlgoShaolin-002583.SZ-20170413093000-20180413145659",  # 194
            "AlgoShaolin-002589.SZ-20170413093000-20180413145659",  # 195
            "AlgoShaolin-002594.SZ-20170413093000-20180413145659",  # 196
            "AlgoShaolin-002596.SZ-20170413093000-20180413145659",  # 197
            "AlgoShaolin-002597.SZ-20170413093000-20180413145659",  # 198
            "AlgoShaolin-002600.SZ-20170413093000-20180413145659",  # 199
            "AlgoShaolin-002601.SZ-20170413093000-20180413145659",  # 200
            "AlgoShaolin-002624.SZ-20170413093000-20180413145659",  # 201
            "AlgoShaolin-002635.SZ-20170413093000-20180413145659",  # 202
            "AlgoShaolin-002640.SZ-20170413093000-20180413145659",  # 203
            "AlgoShaolin-002648.SZ-20170413093000-20180413145659",  # 204
            "AlgoShaolin-002649.SZ-20170413093000-20180413145659",  # 205
            "AlgoShaolin-002662.SZ-20170413093000-20180413145659",  # 206
            "AlgoShaolin-002670.SZ-20170413093000-20180413145659",  # 207
            "AlgoShaolin-002672.SZ-20170413093000-20180413145659",  # 208
            "AlgoShaolin-002673.SZ-20170413093000-20180413145659",  # 209
            "AlgoShaolin-002709.SZ-20170413093000-20180413145659",  # 210
            "AlgoShaolin-002714.SZ-20170413093000-20180413145659",  # 211
            "AlgoShaolin-002716.SZ-20170413093000-20180413145659",  # 212
            "AlgoShaolin-002742.SZ-20170413093000-20180413145659",  # 213
            "AlgoShaolin-002745.SZ-20170413093000-20180413145659",  # 214
            "AlgoShaolin-002797.SZ-20170413093000-20180413145659",  # 215
            "AlgoShaolin-002807.SZ-20170413093000-20180413145659",  # 216
            "AlgoShaolin-300003.SZ-20170413093000-20180413145659",  # 217
            "AlgoShaolin-300009.SZ-20170413093000-20180413145659",  # 218
            "AlgoShaolin-300014.SZ-20170413093000-20180413145659",  # 219
            "AlgoShaolin-300015.SZ-20170413093000-20180413145659",  # 220
            "AlgoShaolin-300017.SZ-20170413093000-20180413145659",  # 221
            "AlgoShaolin-300020.SZ-20170413093000-20180413145659",  # 222
            "AlgoShaolin-300024.SZ-20170413093000-20180413145659",  # 223
            "AlgoShaolin-300027.SZ-20170413093000-20180413145659",  # 224
            "AlgoShaolin-300033.SZ-20170413093000-20180413145659",  # 225
            "AlgoShaolin-300044.SZ-20170413093000-20180413145659",  # 226
            "AlgoShaolin-300055.SZ-20170413093000-20180413145659",  # 227
            "AlgoShaolin-300058.SZ-20170413093000-20180413145659",  # 228
            "AlgoShaolin-300059.SZ-20170413093000-20180413145659",  # 229
            "AlgoShaolin-300070.SZ-20170413093000-20180413145659",  # 230
            "AlgoShaolin-300072.SZ-20170413093000-20180413145659",  # 231
            "AlgoShaolin-300073.SZ-20170413093000-20180413145659",  # 232
            "AlgoShaolin-300077.SZ-20170413093000-20180413145659",  # 233
            "AlgoShaolin-300078.SZ-20170413093000-20180413145659",  # 234
            "AlgoShaolin-300083.SZ-20170413093000-20180413145659",  # 235
            "AlgoShaolin-300088.SZ-20170413093000-20180413145659",  # 236
            "AlgoShaolin-300107.SZ-20170413093000-20180413145659",  # 237
            "AlgoShaolin-300113.SZ-20170413093000-20180413145659",  # 238
            "AlgoShaolin-300115.SZ-20170413093000-20180413145659",  # 239
            "AlgoShaolin-300122.SZ-20170413093000-20180413145659",  # 240
            "AlgoShaolin-300124.SZ-20170413093000-20180413145659",  # 241
            "AlgoShaolin-300128.SZ-20170413093000-20180413145659",  # 242
            "AlgoShaolin-300133.SZ-20170413093000-20180413145659",  # 243
            "AlgoShaolin-300136.SZ-20170413093000-20180413145659",  # 244
            "AlgoShaolin-300137.SZ-20170413093000-20180413145659",  # 245
            "AlgoShaolin-300142.SZ-20170413093000-20180413145659",  # 246
            "AlgoShaolin-300146.SZ-20170413093000-20180413145659",  # 247
            "AlgoShaolin-300157.SZ-20170413093000-20180413145659",  # 248
            "AlgoShaolin-300166.SZ-20170413093000-20180413145659",  # 249
            "AlgoShaolin-300168.SZ-20170413093000-20180413145659",  # 250
            "AlgoShaolin-300170.SZ-20170413093000-20180413145659",  # 251
            "AlgoShaolin-300176.SZ-20170413093000-20180413145659",  # 252
            "AlgoShaolin-300182.SZ-20170413093000-20180413145659",  # 253
            "AlgoShaolin-300188.SZ-20170413093000-20180413145659",  # 254
            "AlgoShaolin-300197.SZ-20170413093000-20180413145659",  # 255
            "AlgoShaolin-300203.SZ-20170413093000-20180413145659",  # 256
            "AlgoShaolin-300212.SZ-20170413093000-20180413145659",  # 257
            "AlgoShaolin-300216.SZ-20170413093000-20180413145659",  # 258
            "AlgoShaolin-300222.SZ-20170413093000-20180413145659",  # 259
            "AlgoShaolin-300223.SZ-20170413093000-20180413145659",  # 260
            "AlgoShaolin-300231.SZ-20170413093000-20180413145659",  # 261
            "AlgoShaolin-300236.SZ-20170413093000-20180413145659",  # 262
            "AlgoShaolin-300251.SZ-20170413093000-20180413145659",  # 263
            "AlgoShaolin-300253.SZ-20170413093000-20180413145659",  # 264
            "AlgoShaolin-300274.SZ-20170413093000-20180413145659",  # 265
            "AlgoShaolin-300287.SZ-20170413093000-20180413145659",  # 266
            "AlgoShaolin-300296.SZ-20170413093000-20180413145659",  # 267
            "AlgoShaolin-300315.SZ-20170413093000-20180413145659",  # 268
            "AlgoShaolin-300316.SZ-20170413093000-20180413145659",  # 269
            "AlgoShaolin-300317.SZ-20170413093000-20180413145659",  # 270
            "AlgoShaolin-300323.SZ-20170413093000-20180413145659",  # 271
            "AlgoShaolin-300353.SZ-20170413093000-20180413145659",  # 272
            "AlgoShaolin-300355.SZ-20170413093000-20180413145659",  # 273
            "AlgoShaolin-300364.SZ-20170413093000-20180413145659",  # 274
            "AlgoShaolin-300373.SZ-20170413093000-20180413145659",  # 275
            "AlgoShaolin-300377.SZ-20170413093000-20180413145659",  # 276
            "AlgoShaolin-300408.SZ-20170413093000-20180413145659",  # 277
            "AlgoShaolin-300409.SZ-20170413093000-20180413145659",  # 278
            "AlgoShaolin-300418.SZ-20170413093000-20180413145659",  # 279
            "AlgoShaolin-300433.SZ-20170413093000-20180413145659",  # 280
            "AlgoShaolin-300450.SZ-20170413093000-20180413145659",  # 281
            "AlgoShaolin-300458.SZ-20170413093000-20180413145659",  # 282
            "AlgoShaolin-300474.SZ-20170413093000-20180413145659",  # 283
            "AlgoShaolin-300476.SZ-20170413093000-20180413145659",  # 284
            "AlgoShaolin-300477.SZ-20170413093000-20180413145659",  # 285
            "AlgoShaolin-300487.SZ-20170413093000-20180413145659",  # 286
            "AlgoShaolin-300496.SZ-20170413093000-20180413145659",  # 287
            "AlgoShaolin-300498.SZ-20170413093000-20180413145659",  # 288
            "AlgoShaolin-300520.SZ-20170413093000-20180413145659",  # 289
            "AlgoShaolin-600000.SH-20170413093000-20180413145659",  # 290
            "AlgoShaolin-600004.SH-20170413093000-20180413145659",  # 291
            "AlgoShaolin-600008.SH-20170413093000-20180413145659",  # 292
            "AlgoShaolin-600009.SH-20170413093000-20180413145659",  # 293
            "AlgoShaolin-600010.SH-20170413093000-20180413145659",  # 294
            "AlgoShaolin-600015.SH-20170413093000-20180413145659",  # 295
            "AlgoShaolin-600016.SH-20170413093000-20180413145659",  # 296
            "AlgoShaolin-600018.SH-20170413093000-20180413145659",  # 297
            "AlgoShaolin-600019.SH-20170413093000-20180413145659",  # 298
            "AlgoShaolin-600022.SH-20170413093000-20180413145659",  # 299
            "AlgoShaolin-600028.SH-20170413093000-20180413145659",  # 300
            "AlgoShaolin-600029.SH-20170413093000-20180413145659",  # 301
            "AlgoShaolin-600030.SH-20170413093000-20180413145659",  # 302
            "AlgoShaolin-600031.SH-20170413093000-20180413145659",  # 303
            "AlgoShaolin-600036.SH-20170413093000-20180413145659",  # 304
            "AlgoShaolin-600038.SH-20170413093000-20180413145659",  # 305
            "AlgoShaolin-600048.SH-20170413093000-20180413145659",  # 306
            "AlgoShaolin-600050.SH-20170413093000-20180413145659",  # 307
            "AlgoShaolin-600056.SH-20170413093000-20180413145659",  # 308
            "AlgoShaolin-600057.SH-20170413093000-20180413145659",  # 309
            "AlgoShaolin-600060.SH-20170413093000-20180413145659",  # 310
            "AlgoShaolin-600066.SH-20170413093000-20180413145659",  # 311
            "AlgoShaolin-600068.SH-20170413093000-20180413145659",  # 312
            "AlgoShaolin-600079.SH-20170413093000-20180413145659",  # 313
            "AlgoShaolin-600085.SH-20170413093000-20180413145659",  # 314
            "AlgoShaolin-600089.SH-20170413093000-20180413145659",  # 315
            "AlgoShaolin-600093.SH-20170413093000-20180413145659",  # 316
            "AlgoShaolin-600100.SH-20170413093000-20180413145659",  # 317
            "AlgoShaolin-600104.SH-20170413093000-20180413145659",  # 318
            "AlgoShaolin-600109.SH-20170413093000-20180413145659",  # 319
            "AlgoShaolin-600110.SH-20170413093000-20180413145659",  # 320
            "AlgoShaolin-600111.SH-20170413093000-20180413145659",  # 321
            "AlgoShaolin-600115.SH-20170413093000-20180413145659",  # 322
            "AlgoShaolin-600118.SH-20170413093000-20180413145659",  # 323
            "AlgoShaolin-600123.SH-20170413093000-20180413145659",  # 324
            "AlgoShaolin-600125.SH-20170413093000-20180413145659",  # 325
            "AlgoShaolin-600141.SH-20170413093000-20180413145659",  # 326
            "AlgoShaolin-600153.SH-20170413093000-20180413145659",  # 327
            "AlgoShaolin-600158.SH-20170413093000-20180413145659",  # 328
            "AlgoShaolin-600160.SH-20170413093000-20180413145659",  # 329
            "AlgoShaolin-600171.SH-20170413093000-20180413145659",  # 330
            "AlgoShaolin-600172.SH-20170413093000-20180413145659",  # 331
            "AlgoShaolin-600176.SH-20170413093000-20180413145659",  # 332
            "AlgoShaolin-600179.SH-20170413093000-20180413145659",  # 333
            "AlgoShaolin-600183.SH-20170413093000-20180413145659",  # 334
            "AlgoShaolin-600188.SH-20170413093000-20180413145659",  # 335
            "AlgoShaolin-600196.SH-20170413093000-20180413145659",  # 336
            "AlgoShaolin-600197.SH-20170413093000-20180413145659",  # 337
            "AlgoShaolin-600198.SH-20170413093000-20180413145659",  # 338
            "AlgoShaolin-600201.SH-20170413093000-20180413145659",  # 339
            "AlgoShaolin-600206.SH-20170413093000-20180413145659",  # 340
            "AlgoShaolin-600208.SH-20170413093000-20180413145659",  # 341
            "AlgoShaolin-600216.SH-20170413093000-20180413145659",  # 342
            "AlgoShaolin-600219.SH-20170413093000-20180413145659",  # 343
            "AlgoShaolin-600230.SH-20170413093000-20180413145659",  # 344
            "AlgoShaolin-600231.SH-20170413093000-20180413145659",  # 345
            "AlgoShaolin-600236.SH-20170413093000-20180413145659",  # 346
            "AlgoShaolin-600256.SH-20170413093000-20180413145659",  # 347
            "AlgoShaolin-600260.SH-20170413093000-20180413145659",  # 348
            "AlgoShaolin-600266.SH-20170413093000-20180413145659",  # 349
            "AlgoShaolin-600271.SH-20170413093000-20180413145659",  # 350
            "AlgoShaolin-600276.SH-20170413093000-20180413145659",  # 351
            "AlgoShaolin-600282.SH-20170413093000-20180413145659",  # 352
            "AlgoShaolin-600291.SH-20170413093000-20180413145659",  # 353
            "AlgoShaolin-600295.SH-20170413093000-20180413145659",  # 354
            "AlgoShaolin-600298.SH-20170413093000-20180413145659",  # 355
            "AlgoShaolin-600315.SH-20170413093000-20180413145659",  # 356
            "AlgoShaolin-600325.SH-20170413093000-20180413145659",  # 357
            "AlgoShaolin-600326.SH-20170413093000-20180413145659",  # 358
            "AlgoShaolin-600330.SH-20170413093000-20180413145659",  # 359
            "AlgoShaolin-600340.SH-20170413093000-20180413145659",  # 360
            "AlgoShaolin-600345.SH-20170413093000-20180413145659",  # 361
            "AlgoShaolin-600348.SH-20170413093000-20180413145659",  # 362
            "AlgoShaolin-600352.SH-20170413093000-20180413145659",  # 363
            "AlgoShaolin-600360.SH-20170413093000-20180413145659",  # 364
            "AlgoShaolin-600362.SH-20170413093000-20180413145659",  # 365
            "AlgoShaolin-600380.SH-20170413093000-20180413145659",  # 366
            "AlgoShaolin-600383.SH-20170413093000-20180413145659",  # 367
            "AlgoShaolin-600388.SH-20170413093000-20180413145659",  # 368
            "AlgoShaolin-600392.SH-20170413093000-20180413145659",  # 369
            "AlgoShaolin-600398.SH-20170413093000-20180413145659",  # 370
            "AlgoShaolin-600406.SH-20170413093000-20180413145659",  # 371
            "AlgoShaolin-600409.SH-20170413093000-20180413145659",  # 372
            "AlgoShaolin-600410.SH-20170413093000-20180413145659",  # 373
            "AlgoShaolin-600418.SH-20170413093000-20180413145659",  # 374
            "AlgoShaolin-600426.SH-20170413093000-20180413145659",  # 375
            "AlgoShaolin-600435.SH-20170413093000-20180413145659",  # 376
            "AlgoShaolin-600436.SH-20170413093000-20180413145659",  # 377
            "AlgoShaolin-600438.SH-20170413093000-20180413145659",  # 378
            "AlgoShaolin-600446.SH-20170413093000-20180413145659",  # 379
            "AlgoShaolin-600449.SH-20170413093000-20180413145659",  # 380
            "AlgoShaolin-600460.SH-20170413093000-20180413145659",  # 381
            "AlgoShaolin-600466.SH-20170413093000-20180413145659",  # 382
            "AlgoShaolin-600477.SH-20170413093000-20180413145659",  # 383
            "AlgoShaolin-600482.SH-20170413093000-20180413145659",  # 384
            "AlgoShaolin-600487.SH-20170413093000-20180413145659",  # 385
            "AlgoShaolin-600489.SH-20170413093000-20180413145659",  # 386
            "AlgoShaolin-600490.SH-20170413093000-20180413145659",  # 387
            "AlgoShaolin-600497.SH-20170413093000-20180413145659",  # 388
            "AlgoShaolin-600498.SH-20170413093000-20180413145659",  # 389
            "AlgoShaolin-600499.SH-20170413093000-20180413145659",  # 390
            "AlgoShaolin-600507.SH-20170413093000-20180413145659",  # 391
            "AlgoShaolin-600516.SH-20170413093000-20180413145659",  # 392
            "AlgoShaolin-600518.SH-20170413093000-20180413145659",  # 393
            "AlgoShaolin-600519.SH-20170413093000-20180413145659",  # 394
            "AlgoShaolin-600521.SH-20170413093000-20180413145659",  # 395
            "AlgoShaolin-600522.SH-20170413093000-20180413145659",  # 396
            "AlgoShaolin-600525.SH-20170413093000-20180413145659",  # 397
            "AlgoShaolin-600535.SH-20170413093000-20180413145659",  # 398
            "AlgoShaolin-600547.SH-20170413093000-20180413145659",  # 399
            "AlgoShaolin-600549.SH-20170413093000-20180413145659",  # 400
            "AlgoShaolin-600567.SH-20170413093000-20180413145659",  # 401
            "AlgoShaolin-600570.SH-20170413093000-20180413145659",  # 402
            "AlgoShaolin-600584.SH-20170413093000-20180413145659",  # 403
            "AlgoShaolin-600585.SH-20170413093000-20180413145659",  # 404
            "AlgoShaolin-600588.SH-20170413093000-20180413145659",  # 405
            "AlgoShaolin-600589.SH-20170413093000-20180413145659",  # 406
            "AlgoShaolin-600596.SH-20170413093000-20180413145659",  # 407
            "AlgoShaolin-600597.SH-20170413093000-20180413145659",  # 408
            "AlgoShaolin-600598.SH-20170413093000-20180413145659",  # 409
            "AlgoShaolin-600600.SH-20170413093000-20180413145659",  # 410
            "AlgoShaolin-600604.SH-20170413093000-20180413145659",  # 411
            "AlgoShaolin-600606.SH-20170413093000-20180413145659",  # 412
            "AlgoShaolin-600621.SH-20170413093000-20180413145659",  # 413
            "AlgoShaolin-600643.SH-20170413093000-20180413145659",  # 414
            "AlgoShaolin-600660.SH-20170413093000-20180413145659",  # 415
            "AlgoShaolin-600667.SH-20170413093000-20180413145659",  # 416
            "AlgoShaolin-600688.SH-20170413093000-20180413145659",  # 417
            "AlgoShaolin-600690.SH-20170413093000-20180413145659",  # 418
            "AlgoShaolin-600699.SH-20170413093000-20180413145659",  # 419
            "AlgoShaolin-600702.SH-20170413093000-20180413145659",  # 420
            "AlgoShaolin-600703.SH-20170413093000-20180413145659",  # 421
            "AlgoShaolin-600705.SH-20170413093000-20180413145659",  # 422
            "AlgoShaolin-600720.SH-20170413093000-20180413145659",  # 423
            "AlgoShaolin-600728.SH-20170413093000-20180413145659",  # 424
            "AlgoShaolin-600740.SH-20170413093000-20180413145659",  # 425
            "AlgoShaolin-600741.SH-20170413093000-20180413145659",  # 426
            "AlgoShaolin-600755.SH-20170413093000-20180413145659",  # 427
            "AlgoShaolin-600763.SH-20170413093000-20180413145659",  # 428
            "AlgoShaolin-600779.SH-20170413093000-20180413145659",  # 429
            "AlgoShaolin-600782.SH-20170413093000-20180413145659",  # 430
            "AlgoShaolin-600787.SH-20170413093000-20180413145659",  # 431
            "AlgoShaolin-600789.SH-20170413093000-20180413145659",  # 432
            "AlgoShaolin-600795.SH-20170413093000-20180413145659",  # 433
            "AlgoShaolin-600797.SH-20170413093000-20180413145659",  # 434
            "AlgoShaolin-600801.SH-20170413093000-20180413145659",  # 435
            "AlgoShaolin-600803.SH-20170413093000-20180413145659",  # 436
            "AlgoShaolin-600804.SH-20170413093000-20180413145659",  # 437
            "AlgoShaolin-600805.SH-20170413093000-20180413145659",  # 438
            "AlgoShaolin-600808.SH-20170413093000-20180413145659",  # 439
            "AlgoShaolin-600809.SH-20170413093000-20180413145659",  # 440
            "AlgoShaolin-600816.SH-20170413093000-20180413145659",  # 441
            "AlgoShaolin-600823.SH-20170413093000-20180413145659",  # 442
            "AlgoShaolin-600835.SH-20170413093000-20180413145659",  # 443
            "AlgoShaolin-600837.SH-20170413093000-20180413145659",  # 444
            "AlgoShaolin-600839.SH-20170413093000-20180413145659",  # 445
            "AlgoShaolin-600846.SH-20170413093000-20180413145659",  # 446
            "AlgoShaolin-600848.SH-20170413093000-20180413145659",  # 447
            "AlgoShaolin-600867.SH-20170413093000-20180413145659",  # 448
            "AlgoShaolin-600874.SH-20170413093000-20180413145659",  # 449
            "AlgoShaolin-600875.SH-20170413093000-20180413145659",  # 450
            "AlgoShaolin-600879.SH-20170413093000-20180413145659",  # 451
            "AlgoShaolin-600884.SH-20170413093000-20180413145659",  # 452
            "AlgoShaolin-600886.SH-20170413093000-20180413145659",  # 453
            "AlgoShaolin-600887.SH-20170413093000-20180413145659",  # 454
            "AlgoShaolin-600893.SH-20170413093000-20180413145659",  # 455
            "AlgoShaolin-600900.SH-20170413093000-20180413145659",  # 456
            "AlgoShaolin-600909.SH-20170413093000-20180413145659",  # 457
            "AlgoShaolin-600926.SH-20170413093000-20180413145659",  # 458
            "AlgoShaolin-600958.SH-20170413093000-20180413145659",  # 459
            "AlgoShaolin-600970.SH-20170413093000-20180413145659",  # 460
            "AlgoShaolin-600971.SH-20170413093000-20180413145659",  # 461
            "AlgoShaolin-600999.SH-20170413093000-20180413145659",  # 462
            "AlgoShaolin-601002.SH-20170413093000-20180413145659",  # 463
            "AlgoShaolin-601006.SH-20170413093000-20180413145659",  # 464
            "AlgoShaolin-601009.SH-20170413093000-20180413145659",  # 465
            "AlgoShaolin-601011.SH-20170413093000-20180413145659",  # 466
            "AlgoShaolin-601012.SH-20170413093000-20180413145659",  # 467
            "AlgoShaolin-601021.SH-20170413093000-20180413145659",  # 468
            "AlgoShaolin-601088.SH-20170413093000-20180413145659",  # 469
            "AlgoShaolin-601099.SH-20170413093000-20180413145659",  # 470
            "AlgoShaolin-601111.SH-20170413093000-20180413145659",  # 471
            "AlgoShaolin-601117.SH-20170413093000-20180413145659",  # 472
            "AlgoShaolin-601128.SH-20170413093000-20180413145659",  # 473
            "AlgoShaolin-601166.SH-20170413093000-20180413145659",  # 474
            "AlgoShaolin-601168.SH-20170413093000-20180413145659",  # 475
            "AlgoShaolin-601169.SH-20170413093000-20180413145659",  # 476
            "AlgoShaolin-601186.SH-20170413093000-20180413145659",  # 477
            "AlgoShaolin-601211.SH-20170413093000-20180413145659",  # 478
            "AlgoShaolin-601222.SH-20170413093000-20180413145659",  # 479
            "AlgoShaolin-601225.SH-20170413093000-20180413145659",  # 480
            "AlgoShaolin-601229.SH-20170413093000-20180413145659",  # 481
            "AlgoShaolin-601231.SH-20170413093000-20180413145659",  # 482
            "AlgoShaolin-601233.SH-20170413093000-20180413145659",  # 483
            "AlgoShaolin-601238.SH-20170413093000-20180413145659",  # 484
            "AlgoShaolin-601288.SH-20170413093000-20180413145659",  # 485
            "AlgoShaolin-601318.SH-20170413093000-20180413145659",  # 486
            "AlgoShaolin-601328.SH-20170413093000-20180413145659",  # 487
            "AlgoShaolin-601333.SH-20170413093000-20180413145659",  # 488
            "AlgoShaolin-601336.SH-20170413093000-20180413145659",  # 489
            "AlgoShaolin-601375.SH-20170413093000-20180413145659",  # 490
            "AlgoShaolin-601377.SH-20170413093000-20180413145659",  # 491
            "AlgoShaolin-601390.SH-20170413093000-20180413145659",  # 492
            "AlgoShaolin-601398.SH-20170413093000-20180413145659",  # 493
            "AlgoShaolin-601601.SH-20170413093000-20180413145659",  # 494
            "AlgoShaolin-601607.SH-20170413093000-20180413145659",  # 495
            "AlgoShaolin-601628.SH-20170413093000-20180413145659",  # 496
            "AlgoShaolin-601636.SH-20170413093000-20180413145659",  # 497
            "AlgoShaolin-601666.SH-20170413093000-20180413145659",  # 498
            "AlgoShaolin-601668.SH-20170413093000-20180413145659",  # 499
            "AlgoShaolin-601678.SH-20170413093000-20180413145659",  # 500
            "AlgoShaolin-601699.SH-20170413093000-20180413145659",  # 501
            "AlgoShaolin-601766.SH-20170413093000-20180413145659",  # 502
            "AlgoShaolin-601788.SH-20170413093000-20180413145659",  # 503
            "AlgoShaolin-601800.SH-20170413093000-20180413145659",  # 504
            "AlgoShaolin-601818.SH-20170413093000-20180413145659",  # 505
            "AlgoShaolin-601857.SH-20170413093000-20180413145659",  # 506
            "AlgoShaolin-601877.SH-20170413093000-20180413145659",  # 507
            "AlgoShaolin-601888.SH-20170413093000-20180413145659",  # 508
            "AlgoShaolin-601899.SH-20170413093000-20180413145659",  # 509
            "AlgoShaolin-601919.SH-20170413093000-20180413145659",  # 510
            "AlgoShaolin-601933.SH-20170413093000-20180413145659",  # 511
            "AlgoShaolin-601939.SH-20170413093000-20180413145659",  # 512
            "AlgoShaolin-601985.SH-20170413093000-20180413145659",  # 513
            "AlgoShaolin-601988.SH-20170413093000-20180413145659",  # 514
            "AlgoShaolin-601989.SH-20170413093000-20180413145659",  # 515
            "AlgoShaolin-601992.SH-20170413093000-20180413145659",  # 516
            "AlgoShaolin-601997.SH-20170413093000-20180413145659",  # 517
            "AlgoShaolin-601998.SH-20170413093000-20180413145659",  # 518
            "AlgoShaolin-603019.SH-20170413093000-20180413145659",  # 519
            "AlgoShaolin-603108.SH-20170413093000-20180413145659",  # 520
            "AlgoShaolin-603128.SH-20170413093000-20180413145659",  # 521
            "AlgoShaolin-603160.SH-20170413093000-20180413145659",  # 522
            "AlgoShaolin-603369.SH-20170413093000-20180413145659",  # 523
            "AlgoShaolin-603559.SH-20170413093000-20180413145659",  # 524
            "AlgoShaolin-603589.SH-20170413093000-20180413145659",  # 525
            "AlgoShaolin-603799.SH-20170413093000-20180413145659",  # 526
            "AlgoShaolin-603993.SH-20170413093000-20180413145659",  # 527
            ]

    # 读取数据：
    GPUID = 0
    # 设置是否需要加载因子去计算预测值
    mode = False
    absolutePath = "D:\\MachineLearningBackTestFrameWork\\tfModelMultiCNNAttentionBiLSTM\\"
    factorAddress = 'output/20180413binhan500part1new/'
    tagName = "1minMaxMin"
    conv_len = 3
    sliceLagMat = [150]
    predictRollingWindowMat = [0.2]
    processNum = 36
    paraFixed = {'riskRatio': -0.001, 'maxLose': -0.01, 'maxTurnoverPerOrder': 5000000, 'maAmountRate': 2}
    paraMat = [[0.001],
               [1000000, 2000000, 5000000, 8000000, 10000000, 15000000]]
    for i in range(394, 395):
        backTestUnderlying = code[i]
        print(backTestUnderlying)

        # py = Pyfile()
        # if (not py.exists(factorAddress + backTestUnderlying + '.pickle')) and mode == True:
        if not os.path.exists(factorAddress + backTestUnderlying + '.pickle') and mode:
            print('Not FactorData')
        else:
            outputFactor = []
            outputSubTag = []
            tradingUnderlyingCode = []
            factorName = []
            if mode:
                outputFactor, outputSubTag, tradingUnderlyingCode, factorName = DumpLoad.loadOutput(factorAddress, backTestUnderlying)
            # 设置需要训练的因子
            factorIndex = [0, 4, 5, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 38, 40]
            # factorIndex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,19,20,21,22,23,24,25]
            factorMaAmountIndex = 41
            # factorMaAmountIndex = 26
            for j in sliceLagMat:
                for k in predictRollingWindowMat:
                    predictRollingWindow = k
                    sliceLag = j
                    # 建立模型管理模块
                    modelManagement = []
                    if mode:
                        modelManagement = ModelManagement(trainRollingWindow=1 - predictRollingWindow,
                                                          predictRollingWindow=predictRollingWindow,
                                                          outputFactor=outputFactor,
                                                          outputSubTag=outputSubTag,
                                                          tradingUnderlyingCode=tradingUnderlyingCode,
                                                          factorName=factorName, factorIndex=factorIndex,
                                                          factorMaAmountIndex=factorMaAmountIndex,
                                                          backTestUnderlying=backTestUnderlying, tagName=tagName)
                    # 设置模型参数
                    paraModel = {"absolutePath": absolutePath, "GPUID": GPUID, "validationNum": 40000,
                                 'sliceLag': sliceLag, 'conv_len': conv_len,
                                 "evaluateModel": {"percentileErrorRatio": 70, "triggerRatio": 0.002,
                                                   "riskRatio": -0.001}}
                    modelName = "modelCNNRNN" + tagName + "Pred" + str(predictRollingWindow) + 'SliceLag' + str(sliceLag)
                    if mode:
                        ModelMultiCNNAttentionBiLSTM(paraModel=paraModel, name=modelName, tagName=tagName, modelManagement=modelManagement)
                        # 训练模型
                        modelManagement.train()
                        signalDataSet = generateSignalDataSet(modelName, modelManagement)
                        if not os.path.exists(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName):
                            os.makedirs(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName)
                        with open(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/signalDataSet.pickle', 'wb') as f:
                            pickle.dump(signalDataSet, f)
                    else:
                        with open(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/signalDataSet.pickle', 'rb') as f:
                            signalDataSet = pickle.load(f)

                    # 获取计算该股票需要的数据
                    time1 = dt.datetime.now()
                    if not os.path.exists(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/Data.pickle'):
                        print("Loading Tick and Transaction Data")
                        Code = signalDataSet.tradingUnderlyingCode()[0]
                        startTime = dt.datetime.fromtimestamp(signalDataSet.outputByUnderlying()[0]['outSampleSubTag'][0][tagName].startTimeStamp)
                        endTime = dt.datetime.fromtimestamp(signalDataSet.outputByUnderlying()[0]['outSampleSubTag'][-1][tagName].startTimeStamp)
                        startTime = dt.datetime(startTime.year, startTime.month, startTime.day, 9, 30, 0)
                        endTime = dt.datetime(endTime.year, endTime.month, endTime.day, 15, 0, 0)

                        # tickData = GD.getData(Code, startTime, endTime, timeMode=2)
                        # transactionData = GD.getTransactionData(Code, startTime, endTime, timeMode=2)
                        tickData = GD.getInsightTickData(Code, startTime, endTime, timeMode=2)
                        transactionData = GD.getInsightTransactionData(Code, startTime, endTime, True, True, timeMode=2)
                        print("Finish Loading")
                        with open(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/Data.pickle', 'wb') as f:
                            pickle.dump((tickData, transactionData), f)
                    else:
                        with open(absolutePath + 'ModelSignalDataSet/' + backTestUnderlying + '_' + modelName + '/Data.pickle', 'rb') as f:
                            tickData, transactionData = pickle.load(f)
                    time2 = dt.datetime.now()
                    print(time2-time1)

                    # 分析信号产生交易
                    analysisMat = []
                    multiProcessResult = []

                    paraInProcess, processNum = paraGroup(paraMat, processNum)
                    pool = Pool(processes=processNum)

                    time1 = dt.datetime.now()
                    for ii in range(paraInProcess.__len__()):
                        result = pool.apply_async(multiProcessFunction, (paraInProcess[ii], paraFixed, absolutePath, backTestUnderlying, modelName, ))
                        multiProcessResult.append(result)
                    pool.close()
                    pool.join()
                    for kk in multiProcessResult:
                        analysisMat += kk.get()
                    time2 = dt.datetime.now()
                    print(time2-time1)
                    bestLine = SignalEvaluate.triggerOptimizationProfitAndInitAmount(analysisMat)

                    signalTagPara = {"longTriggerRatioPercentile": 0,
                                     "shortTriggerRatioPercentile": 100,
                                     "longMinTriggerRatio": analysisMat[bestLine][0],
                                     "shortMinTriggerRatio": -analysisMat[bestLine][0],
                                     "riskRatio": paraFixed['riskRatio'], "maxLose": paraFixed['maxLose'],
                                     "closeRatio": -analysisMat[bestLine][0] / 2}

                    mockTradePara = {"initAmount": analysisMat[bestLine][1], "maxTurnoverPerOrder": paraFixed['maxTurnoverPerOrder'], "maxRatePerOrder": 0.25,
                                     "maAmountRate": paraFixed['maAmountRate'], "openWithdrawSeconds": 2.5, "closeWithdrawSeconds": 3,
                                     "buyLevel": 1, "sellLevel": 1, "buyDeviation": 0, "sellDeviation": -0.01,
                                     "MIN_ORDER_QTY": 100}

                    signalEvaluate = SignalEvaluate(signalDataSet, signalTagPara, mockTradePara,
                                                    "SignalExecutorMaxMinTag", absolutePath, tickData,
                                                    transactionData)
                    # 执行
                    signalEvaluate.evaluate(funStr=None, show=True)

                    print('bestLine: ' + str(bestLine))
                    print('TriggerRatio: ' + str(analysisMat[bestLine][0]))
                    print('closeRatio: ' + str(analysisMat[bestLine][1]))
                    # del signalEvaluate
                    del tickData
                    del transactionData
                    gc.collect()


if __name__ == "__main__":
    main()
